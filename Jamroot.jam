include configuration.jam ;
import boost ;
#these `usings` are required unless they have already been done in user-config.jam or site-config.jam -
#in which case they must not be here.
using boost : 1.47 : <root>/Users/evan/Programming/boost/boost_1_47_0/ ;
using darwin : : /opt/local/bin/g++-mp-4.6 ;# /Developer-old/usr/bin/g++ ;

boost.use-project 1.47 ;

lib threading_building_blocks
    :
    : <file>$(threading_building_blocks_library)
    :
    : <include>$(threading_building_blocks_include_directory)
    ;

lib threading_building_blocks_malloc
    :
    : <file>$(threading_building_blocks_malloc_library)
    :
    : <include>$(threading_building_blocks_include_directory)
    ;

lib SFML-system
    :
    : <file>$(SFML_system_library)
    :
    : <include>$(SFML_include_directory) <framework>CoreFoundation <framework>Cocoa <framework>OpenGL <library>freetype ;
lib SFML-window
    :
    : <file>$(SFML_window_library)
    :
    : <include>$(SFML_include_directory) <framework>CoreFoundation <framework>Cocoa <framework>OpenGL <library>freetype <library>SFML-system ;
lib SFML-graphics
    :
    : <file>$(SFML_graphics_library)
    :
    : <include>$(SFML_include_directory) <framework>CoreFoundation <framework>Cocoa <framework>OpenGL <library>freetype <library>SFML-window ;

alias CoreFoundation
    :
    : 
    :
    : <linkflags>"-framework CoreFoundation" ;
alias Cocoa
    :
    : 
    :
    : <linkflags>"-framework Cocoa" ;
alias OpenGL
    :
    :
    :
    : <linkflags>"-framework OpenGL" ;

lib freetype : : <file>"/Users/evan/Programming/freetype/library/lib/libfreetype.a" : : ;
    
alias staticlibcpp : : : : <linkflags>"-lstdc++-static" ;

exe HourglassII 
    : #sources
    [ glob *.cpp lua/*.cpp ]
    threading_building_blocks
    threading_building_blocks_malloc
    SFML-graphics
    staticlibcpp
    : #requirements
    <library>/boost//serialization
    <library>/boost//filesystem
    <library>/boost//system
    <define>BOOST_MULTI_ARRAY_NO_GENERATORS
    <define>NDEBUG
    ;

alias Install : Install-exe Install-libs Install-plist Install-resources ;
install Install-exe : HourglassII : <conditional>@exe_install_location_rule ;
install Install-libs : threading_building_blocks threading_building_blocks_malloc : <conditional>@lib_install_location_rule ;
install Install-resources : osx/HourglassSwirl.icns triggerSystem.lua : <conditional>@resources_install_location_rule ;
install Install-plist : osx/Info.plist osx/PkgInfo : <conditional>@plist_install_location_rule ;

rule exe_install_location_rule ( properties * )
{
    local result ;
    local relative_install_location ;
    if <target-os>darwin in $(properties)
    {
        relative_install_location = "HourglassII.app/Contents/MacOS/" ;
    }
    else
    {
        relative_install_location = "HourglassII/" ;
    }
    if <variant>debug in $(properties)
    {
        result = <location>$(debug_install_location)$(relative_install_location) ;
    }
    else if <variant>release in $(properties)
    {
        result = <location>$(release_install_location)$(relative_install_location) ;
    }
    return $(result) ;
}

rule lib_install_location_rule ( properties * )
{
    local result ;
    local relative_install_location ;
    if <target-os>darwin in $(properties)
    {
        relative_install_location = "HourglassII.app/Contents/Frameworks/" ;
    }
    else
    {
        relative_install_location = "HourglassII/" ;
    }
    if <variant>debug in $(properties)
    {
        result = <location>$(debug_install_location)$(relative_install_location) ;
    }
    else if <variant>release in $(properties)
    {
        result = <location>$(release_install_location)$(relative_install_location) ;
    }
    return $(result) ;
}

rule plist_install_location_rule ( properties * )
{
    local result ;
    if <variant>debug in $(properties)
    {
        result = <location>$(debug_install_location)"HourglassII.app/Contents/" ;
    }
    else if <variant>release in $(properties)
    {
        result = <location>$(release_install_location)"HourglassII.app/Contents/" ;
    }
    return $(result) ;
}

rule resources_install_location_rule ( properties * )
{
    local result ;
    if <variant>debug in $(properties)
    {
        result = <location>$(debug_install_location)"HourglassII.app/Contents/Resources/" ;
    }
    else if <variant>release in $(properties)
    {
        result = <location>$(release_install_location)"HourglassII.app/Contents/Resources/" ;
    }
    return $(result) ;
}
