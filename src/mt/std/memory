#ifndef HG_MT_STD_MEMORY
#define HG_MT_STD_MEMORY
#include "../../multi_thread_deleter.h"
#include "../../multi_thread_allocator.h"
#include <memory>
namespace hg {
namespace mt {
namespace std{

template<typename T>
using unique_ptr = ::std::unique_ptr<T, multi_thread_deleter<T>>;

template<typename T, typename... Args>
unique_ptr<T> make_unique(Args &&...args) {
    return unique_ptr<T>(new (multi_thread_tag{}) T(::std::forward<Args>(args)...));
}

}
}
}
#endif //HG_MT_STD_MEMORY
