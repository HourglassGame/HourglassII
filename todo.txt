*** Unimplemented features/things to think about doing ***

----===== DETAILED CODING ISSUES =====-----

BUG - Fix Div-by-zero in BoxCollisionAlgorithm

BUG - Fix Crashes and Infinite loops that can be caused by loading ill-formed levels or
    running out of memory while loading/running levels.

BUG - make DirectLuaTriggerSystem deterministic + consistent
    (At the moment it isn't, due the the underspecified nature of floating point operations in C++)

Implement variable box/guy/segment sizes

Implement drawing of post-physics additional box departures. (Or should this be done by the triggersystem?)
    * For things with a relative arrival location, need some way of knnowing the absolute location to draw them at.

Investigate the following inconsistency:
  Boxes which have departed in a special way cannot be stepped on by guys and
  cannot be picked up, but *can* stop guys from placing boxes

Remove Portals, replace with Mutators. Requirements:
 * Pass player input when a guy collides with portal.
 * Make mutator return ObjectAndTime.
 * Note: No need to pass object and time as mutators happen before any other time travel.
 * Remember to maintain the distinction between interactable boxes/guys and ones that 'left'.
   * Left if any of timeDirection, nextTime or arrival basis is not equal to the premutated value

Add trigger-only data to Guys and Boxes.
 * Think about type; Vector? Map? Map of vectors?
 * Going for map of vectors (int -> int[]) because that is the most common use.
 * Vector is more general, we may change to that later...

Think about removing illegal portal? With the above 2 things implemented it is possible.

Allow trigger system to create persistent Glitz? (this is for lazy "now I want explosion gfx")

Solve glitz ordering (maybe this is already done, idk. The current way seems a bit bad.)
    * Ordering for the purposes of sorthing departures/arrivals
      (is this necessary? just choose an arbitrary ordering?)
    * Ordering for the purposes of layered drawing.

Unify the forwards and reverse glitz lists into a single "bidirectional glitz" list?
    (I'm not sure that this is worth doing, hold off on this one.)

Time Guns
 * Physics: Finish raytrace algo
 * Requires persistent Glitz and line Glitz to visualise.
 
Think about pause time
 * A Guy that departs to its current frame
 * This seems to replicate the old pause time specs.
 * Guy could shoot other guys, even into pause time.
 * Works as long as nothing can interact with guy.
 * Does not work for boxes as they'd chronofrag themselves, would work if they could go ethereal for pause.
 * These pause times would be limited to a single agent. No 'alternate time stream' with 2 entities.
 * Aka reverse or forwards time in pause time means nothing.

Improve Input
 * Send frame of relevant input with mutateObject on Guys
 * Pass input in more raw form. Mouse position etc...
 * Enum for key holding, 4 states:
   * OFF (not held at all)
   * PRESS (was off last time, now on)
   * ON (is held down)
   * RELEASE (was on last frame, now off)
 * Remove hardcoded portal/mutator actioned.

Finish and Submit Boost patch(es).
    * Thread
    * Container

Allow boxes to be dropped somewhere other than at the feet of the guy.

Get automated builds working again

Make sure the code still works on windows and linux

----===== FRONT END =====----

*Support different level sizes and window scaling.
*Save games? (quick save, automatic saving)
*What were those other menu options, whoops totally slipped my mind
*Something about it being a horrible hack currently
*Put in better graphics than the current "coloured-rectangles"
*Current guy marker (arrow over head or similar)

----===== GAMEPLAY ====----

Recreate Hourglass in HourglassII.

----===== STORYLINE ISSUES =====-----

Decide on setting
*What would happen to Victorian England with the advent of time travel?
  -Who else has the technology?
*How widespread is the time travel technology?
*Time travel is confined to short "bubbles" which can only be merged with the rest of the
    universe when they are free of paradoxes (no waves)
  *What are reverse time objects?
  *Why are bubbles so short (do they require lots of energy?)
  *What if several bubbles are merged at once and there is a conflict?
  *What about "bubble-chaining" to get long (temporal) distance time travel.
*Time-travel implies the ability to teleport.
  *What are some good uses for teleportation?
  *Is the teleportation distance limited? (To avoid travel to the moon/wherever)
  *How controllable is the teleportation?
      (You could imagine that the rotation of the earth and so on would make aiming it be quite challenging.)

-(suggestion)Time travel is known about by the majority of the population but is too impractical for the common people.
    ("Theoretically possible") Main character works on this.

Decide on main characters
*Main Character - the genius inventor Timothy Algenon-Porter
*His benefactor (??)
*Fellow inventors (colleagues)
*Possible Ada Lovelace cameo

Decide on main plot points
*Timothy finds himself in a pickle, tries to warn himself using time travel to prevent his death.
    (Possible) Results in a hideous head-grafting.

*Have non-linear storyline.
  -Write many more story lines than the length of the game, and then present the  player with many tough
      (or not-so-tough) decisions to make (branch at the decision points).
*Stray paradoxes === nuclear fallout
  -How do paradoxes occur? (Given that the bubbles don't allow paradoxes). (Maybe paradoxes are caused bubble conflicts
      (failure to merge bubbles))
  -Characters do not notice paradoxes.
      (Or rather, they do not notice them as state-flipping of the universe.
      The only thing that they will notice is the existence of things in the
      past that are created without a cause (??).)


*A character gets displaced by a paradox and replaced by an alternate timeline version of themselves

Write script

Design levels

----===== GRAPHICAL =====----

**Apart from basics such as character animations, this is heavily dependent on the storyline, particularly the setting. So this is really a placeholder section.

----===== SOUNDTRACK =====----

**Apart from basics such as character animations, this is heavily dependent on the storyline, particularly the setting. So this is really a placeholder section.